public Optional<List<Employee>> showAddEmployeesDialog(Node ownerNode, TalkSession session) {
        try {
            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/fxml/add-employee-dialog.fxml"));
            fxmlLoader.setControllerFactory(applicationContext::getBean);
            Scene scene = new Scene(fxmlLoader.load());
            AddEmployeeDialogController controller = fxmlLoader.getController();
            
            // Átadjuk az aktuális session-t, hogy a controller tudja, kiket kell kihagyni a listából.
            controller.initData(session);

            themeManager.applyTheme(scene);

            Stage dialogStage = new Stage();
            dialogStage.setTitle("Új Tagok Hozzáadása");
            dialogStage.initModality(Modality.WINDOW_MODAL);
            dialogStage.initOwner(ownerNode.getScene().getWindow());
            dialogStage.setScene(scene);
            dialogStage.showAndWait();

            if (controller.isConfirmed()) {
                return Optional.ofNullable(controller.getSelectedEmployees());
            }

        } catch (IOException e) {
            e.printStackTrace();
            // Itt lehetne egy hibaüzenetet is megjeleníteni
        }
        return Optional.empty();
    }

 <bottom>
        <!-- EZ AZ ÚJ SZEKCIÓ A GOMBOKKAL -->
        <HBox alignment="CENTER_RIGHT" spacing="10.0" BorderPane.alignment="CENTER">
            <padding>
                <Insets top="10.0" />
            </padding>
            <children>
                <Button onAction="#handleAddEmployees" text="+ Tag Hozzáadása" />
                <Button onAction="#handleRemoveEmployees" text="- Tag Eltávolítása" />
            </children>
        </HBox>
    </bottom>


 /**
     * A "+ Tag Hozzáadása" gomb logikája.
     */
    @FXML
    private void handleAddEmployees() {
        dialogFactory.showAddEmployeesDialog(employeeTable, currentSession).ifPresent(selectedEmployees -> {
            if (!selectedEmployees.isEmpty()) {
                talkSessionService.addEmployeesToSession(currentSession, selectedEmployees);
                refreshTable(); // Frissítjük a táblázatot az új tagokkal
            }
        });
    }

    /**
     * A "- Tag Eltávolítása" gomb logikája.
     */
    @FXML
    private void handleRemoveEmployees() {
        List<Employee> selectedEmployees = employeeTable.getSelectionModel().getSelectedItems();
        if (selectedEmployees == null || selectedEmployees.isEmpty()) {
            // Itt lehetne egy hibaüzenetet feldobni
            return;
        }

        Alert confirmation = new Alert(Alert.AlertType.CONFIRMATION);
        confirmation.setTitle("Megerősítés");
        confirmation.setHeaderText("Biztosan eltávolítod a kiválasztott " + selectedEmployees.size() + " dolgozót a session-ből?");
        confirmation.setContentText("Ez a művelet nem vonható vissza.");

        Optional<ButtonType> result = confirmation.showAndWait();
        if (result.isPresent() && result.get() == ButtonType.OK) {
            talkSessionService.removeEmployeesFromSession(currentSession, selectedEmployees);
            refreshTable(); // Frissítjük a táblázatot
        }
    }

    /**
     * Egy új metódus, ami frissíti a táblázat tartalmát.
     */
    private void refreshTable() {
        employeeObservableList.setAll(currentSession.getEmployees());
    }
